#ifndef RESIN_GL_H
#define RESIN_GL_H 1

#include <stdint.h>

#if defined(__gl_gl_h_) || defined(__gl_glext_h_)
# error "The system OpenGL header should not be included before resin"
#endif

#define __gl_gl_h_      1
#define __gl_glext_h_   1

/**
 * System-compatible OpenGL header.
 *
 * This header is configurable with a bunch of defines to prevent
 * name pollution:
 *
 * RESIN_EXPOSE_GL_VERSION      - Disable enums and functions above the given OpenGL version.
 * RESIN_EXPOSE_GL_COREVERSION  - Disable enums and functions that are obsolete for the given version.
 *
 * The special macro RESIN_LEAN hides most clutter by default.
 */


#if !defined(RESIN_EXPOSE_GL_VERSION)
# define RESIN_GL_VERSION 46
#else
# define RESIN_GL_VERSION RESIN_EXPOSE_GL_VERSION
#endif

#if !defined(RESIN_EXPOSE_GL_COREVERSION)
# if defined(RESIN_LEAN)
#  define RESIN_GL_COREVERSION 32
# else
#  define RESIN_GL_COREVERSION 10
# endif
#else
# define RESIN_GL_COREVERSION RESIN_EXPOSE_GL_COREVERSION
#endif

#if defined(WIN32)
# define RESIN_APIENTRY __stdcall
#else
# define RESIN_APIENTRY
#endif

#if !defined(RESIN_LEAN)
# define APIENTRY       RESIN_APIENTRY
# define APIENTRYP      APIENTRY*
# define RESIN_PROCS    1
#endif

#if defined(RESIN_EXPOSE_PROCS) && !defined(RESIN_PROCS)
# define RESIN_PROCS 1
#endif

#ifndef GLAPI
#define GLAPI extern
#endif

typedef unsigned int    GLenum;
typedef unsigned char   GLboolean;
typedef unsigned int    GLbitfield;
typedef void            GLvoid;
typedef int8_t          GLbyte;
typedef uint8_t         GLubyte;
typedef int16_t         GLshort;
typedef uint16_t        GLushort;
typedef int             GLint;
typedef unsigned int    GLuint;
typedef int32_t         GLclampx;
typedef int             GLsizei;
typedef float           GLfloat;
typedef float           GLclampf;
typedef double          GLdouble;
typedef double          GLclampd;
typedef void*           GLeglClientBufferEXT;
typedef void*           GLeglImageOES;
typedef char            GLchar;
typedef char            GLcharARB;

#if defined(__APPLE__)
typedef void*           GLhandleARB;
#else
typedef unsigned int    GLhandleARB;
#endif

typedef uint16_t        GLhalf;
typedef uint16_t        GLhalfARB;
typedef int32_t         GLfixed;
typedef intptr_t        GLintptr;
typedef intptr_t        GLintptrARB;

#if defined(_MSC_VER)
typedef long            GLsizeiptr;
typedef long            GLsizeiptrARB;
#else
typedef ssize_t         GLsizeiptr;
typedef ssize_t         GLsizeiptrARB;
#endif

typedef int64_t         GLint64;
typedef int64_t         GLint64EXT;
typedef uint64_t        GLuint64;
typedef uint64_t        GLuint64EXT;

typedef struct __GLsync*    GLsync;

struct _cl_context;
struct _cl_event;

typedef void (RESIN_APIENTRY *GLDEBUGPROC)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar *message,const void *userParam);
typedef void (RESIN_APIENTRY *GLDEBUGPROCARB)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar *message,const void *userParam);
typedef void (RESIN_APIENTRY *GLDEBUGPROCKHR)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar *message,const void *userParam);
typedef void (RESIN_APIENTRY *GLDEBUGPROCAMD)(GLuint id,GLenum category,GLenum severity,GLsizei length,const GLchar *message,void *userParam);

typedef unsigned short GLhalfNV;
typedef GLintptr GLvdpauSurfaceNV;
typedef void (RESIN_APIENTRY *GLVULKANPROCNV)(void);

%GENERATED%

#ifdef RESIN_PROCS
#undef RESIN_PROCS
#endif

#undef RESIN_GL_VERSION
#undef RESIN_GL_COREVERSION

#endif
